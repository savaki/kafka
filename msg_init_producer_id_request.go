// Code generated by kafka-protocol-gen. DO NOT EDIT.
//
// Copyright 2019 Matt Ho
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package kafka

import (
	"github.com/savaki/kafka/protocol"
	"github.com/savaki/kafka/sizeof"
)

// InitProducerIdRequest; ApiKey: 22, Versions: 0-2
type InitProducerIdRequest struct {
	TransactionalId      string // The transactional id, or null if the producer is not transactional. Versions: 0+
	TransactionTimeoutMs int32  // The time in ms to wait for before aborting idle transactions sent by this producer. This is only relevant if a TransactionalId has been defined. Versions: 0+
}

// size of InitProducerIdRequest; Versions: 0-2
func (t InitProducerIdRequest) size(version int16) int32 {
	var sz int32
	sz += sizeof.String(t.TransactionalId) // TransactionalId
	sz += sizeof.Int32                     // TransactionTimeoutMs
	return sz
}

// encode InitProducerIdRequest; Versions: 0-2
func (t InitProducerIdRequest) encode(e *protocol.Encoder, version int16) {
	e.PutString(t.TransactionalId)     // TransactionalId
	e.PutInt32(t.TransactionTimeoutMs) // TransactionTimeoutMs
}

// decode InitProducerIdRequest; Versions: 0-2
func (t *InitProducerIdRequest) decode(d *protocol.Decoder, version int16) error {
	var err error
	t.TransactionalId, err = d.String()
	if err != nil {
		return err
	}
	t.TransactionTimeoutMs, err = d.Int32()
	if err != nil {
		return err
	}
	return err
}
