// Code generated by kafka-protocol-gen. DO NOT EDIT.
//
// Copyright 2019 Matt Ho
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package kafka

import (
	"github.com/savaki/kafka/protocol"
	"github.com/savaki/kafka/sizeof"
)

// SaslHandshakeResponse; ApiKey: 17, Versions: 0-1
type SaslHandshakeResponse struct {
	ErrorCode  int16    // The error code, or 0 if there was no error. Versions: 0+
	Mechanisms []string // The mechanisms enabled in the server. Versions: 0+
}

// size of SaslHandshakeResponse; Versions: 0-1
func (t SaslHandshakeResponse) size(version int16) int32 {
	var sz int32
	sz += sizeof.Int16                     // ErrorCode
	sz += sizeof.StringArray(t.Mechanisms) // Mechanisms
	return sz
}

// encode SaslHandshakeResponse; Versions: 0-1
func (t SaslHandshakeResponse) Encode(e *protocol.Encoder, version int16) {
	e.PutInt16(t.ErrorCode)        // ErrorCode
	e.PutStringArray(t.Mechanisms) // Mechanisms
}

// decode SaslHandshakeResponse; Versions: 0-1
func (t *SaslHandshakeResponse) Decode(d *protocol.Decoder, version int16) error {
	var err error
	t.ErrorCode, err = d.Int16()
	if err != nil {
		return err
	}
	t.Mechanisms, err = d.StringArray()
	if err != nil {
		return err
	}
	return err
}
