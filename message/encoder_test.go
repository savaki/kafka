// Code generated by kafka-protocol-gen. DO NOT EDIT.
//
// Copyright 2019 Matt Ho
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package message

import (
	"bytes"
	"io"
	"testing"
)

func TestEncoder_err(t *testing.T) {
	var (
		buf     = bytes.NewBuffer(nil)
		wantErr = io.EOF
		e       = Encoder{
			target: buf,
			err:    wantErr,
		}
	)

	var b bool
	e.PutBool(b)

	var data []byte
	e.PutBytes(data)

	var i8 int8
	e.PutInt8(i8)

	var i16 int16
	e.PutInt16(i16)

	var i32 int32
	e.PutInt32(i32)

	var ii32 []int32
	e.PutInt32Array(ii32)

	var i64 int64
	e.PutInt64(i64)

	var ii64 []int64
	e.PutInt64Array(ii64)

	var sp *string
	e.PutNullableString(sp)

	e.PutRecordHeader("hello", "world")

	var s string
	e.PutString(s)

	var ss []string
	e.PutStringArray(ss)

	e.PutVarBytes([]byte("hello world"))

	e.PutVarInt(123)

	e.PutVarString("hello world")

	if got, want := buf.Len(), 0; got != want {
		t.Fatalf("got %v; want %v", got, want)
	}

	if got := e.Flush(); got != wantErr {
		t.Fatalf("got %v; want %v", got, wantErr)
	}
}
