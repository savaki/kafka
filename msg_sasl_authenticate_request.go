// Code generated by kafka-protocol-gen. DO NOT EDIT.
//
// Copyright 2019 Matt Ho
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package kafka

import (
	"github.com/savaki/kafka/protocol"
	"github.com/savaki/kafka/sizeof"
)

// SaslAuthenticateRequest; ApiKey: 36, Versions: 0-1
type SaslAuthenticateRequest struct {
	AuthBytes []byte // The SASL authentication bytes from the client, as defined by the SASL mechanism. Versions: 0+
}

// size of SaslAuthenticateRequest; Versions: 0-1
func (t SaslAuthenticateRequest) size(version int16) int32 {
	var sz int32
	sz += sizeof.Bytes(t.AuthBytes) // AuthBytes
	return sz
}

// encode SaslAuthenticateRequest; Versions: 0-1
func (t SaslAuthenticateRequest) Encode(e *protocol.Encoder, version int16) {
	e.PutBytes(t.AuthBytes) // AuthBytes
}

// decode SaslAuthenticateRequest; Versions: 0-1
func (t *SaslAuthenticateRequest) Decode(d *protocol.Decoder, version int16) error {
	var err error
	t.AuthBytes, err = d.Bytes()
	if err != nil {
		return err
	}
	return err
}
